/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

// This will make it choke: (p&(p>EXp))   (p&(p>EXp))&-EGp    (p&AG(p>EXp))&-EGp

/*
 * NewApplet.java
 *
 * Created on 20/11/2010, 12:43:29 PM
 */

//package javaapplication1;
import formulas.*;
import java.io.PrintWriter;
/**
 *
 * @author john
 */
public class JApplet extends javax.swing.JApplet {

    /** Initializes the applet JApplet */
    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        //java.awt.GridBagConstraints gridBagConstraints;

        panel1 = new javax.swing.JPanel();
        panel2 = new javax.swing.JPanel();
        FormulaLabel = new javax.swing.JLabel();
        FormulaTextField = new javax.swing.JTextField();
        panel3 = new javax.swing.JPanel();

        TestBCTLButton = new javax.swing.JButton();
        HueBCTLButton = new javax.swing.JButton();
        OldBCTLButton = new javax.swing.JButton();
        LogBCTLButton = new javax.swing.JButton();
        NewBCTLButton = new javax.swing.JButton();
        CTLButton = new javax.swing.JButton();
        OutputTextArea = new javax.swing.JTextArea();
	//OutputTextArea.setRows(20);
	OutputTextArea.setColumns(70);
	OutputScrollPane = new javax.swing.JScrollPane(OutputTextArea);
	OutputScrollPane.setPreferredSize(new java.awt.Dimension(Integer.MAX_VALUE,
                                       Integer.MAX_VALUE));

        //setLayout(new java.awt.BorderLayout());

        panel1.setLayout(new javax.swing.BoxLayout(panel1, javax.swing.BoxLayout.Y_AXIS));

        panel2.setLayout(new javax.swing.BoxLayout(panel2, javax.swing.BoxLayout.LINE_AXIS));

        FormulaLabel.setText("Formula: ");
        panel2.add(FormulaLabel);

        FormulaTextField.setColumns(60);
        FormulaTextField.setText("-(AFGFGp<AFAGAFAGp)");
        FormulaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormulaTextFieldActionPerformed(evt);
            }
        });
        panel2.add(FormulaTextField);
	//panel2.setPreferredSize(0);

//        panel1.add(panel2, new java.awt.GridBagConstraints());
        panel1.add(panel2);

        OldBCTLButton.setText("BCTL* (Original)");
        HueBCTLButton.setText("BCTL* (Filter Hues)"); 
        TestBCTLButton.setText("Self Test"); 
        LogBCTLButton.setText("BCTL* + Proof (Slow)");
        NewBCTLButton.setText("BCTL*");
        OldBCTLButton.setName("BCTLButton"); // NOI18N
        HueBCTLButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
            	cleanUp();
                JNode.log=false;
                JNode.use_hue_tableau = true;
                activeThread = new Thread(new JRunTab(FormulaTextField.getText(), report(), JRunTab.BCTLNEW));
        	activeThread.start();
            }//GEN-LAST:event_BCTLButtonMouseClicked
        });
        TestBCTLButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
            	cleanUp();
                JNode.log=false;
                JNode.use_hue_tableau = false;
                activeThread = new Thread(new JRunTab(FormulaTextField.getText(), report(), JRunTab.RANDOM_TEST));
        	activeThread.start();
            }//GEN-LAST:event_BCTLButtonMouseClicked
        });
        OldBCTLButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OldBCTLButtonMouseClicked(evt);
            }
        });
        LogBCTLButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogBCTLButtonMouseClicked(evt);
            }
        });
        NewBCTLButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NewBCTLButtonMouseClicked(evt);
            }
        });
        panel3.add(NewBCTLButton);
        panel3.add(HueBCTLButton);
        panel3.add(TestBCTLButton);
        panel3.add(LogBCTLButton);
        panel3.add(OldBCTLButton);

        CTLButton.setText("CTL*");
        CTLButton.setName("CTL"); // NOI18N
        CTLButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CTLButtonActionPerformed(evt);
            }
        });
        panel3.add(CTLButton);
	//panel3.setPreferredSize(0);

   /*     gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;*/
        panel1.add(panel3);
/*        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;*/
        panel1.add(OutputScrollPane);

        add(panel1, java.awt.BorderLayout.CENTER);
	//panel1.pack();
	//setVisible(true);

    }// </editor-fold>//GEN-END:initComponents

    private void cleanUp() {
        OutputTextArea.setText("");
	if (activeThread != null) {
		activeThread.stop();
                
                //try { activeThread.join(); } catch (Exception e) {}
		//activeThread.stop();
                //I Don't know why we have to wait, but other
                //try { Thread.sleep(100); } catch (Exception e) {}
	}
    }

     private void OldBCTLButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BCTLButtonMouseClicked
	cleanUp();

        JNode.use_hue_tableau = false;
        activeThread = new Thread(new JRunTab(FormulaTextField.getText(), report(), JRunTab.BCTLOLD));
	activeThread.start();
    }    
     
    
     private void LogBCTLButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BCTLButtonMouseClicked
	cleanUp();

        JNode.use_hue_tableau = false;
        JNode.log=true;
        activeThread = new Thread(new JRunTab(FormulaTextField.getText(), report(), JRunTab.BCTLNEW));
	activeThread.start();
    }

    private void NewBCTLButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BCTLButtonMouseClicked
	cleanUp();
        JNode.log=false;
        activeThread = new Thread(new JRunTab(FormulaTextField.getText(), report(), JRunTab.BCTLNEW));
	activeThread.start();
    }//GEN-LAST:event_BCTLButtonMouseClicked

    private formulas.ReportToFile report() {
	return (new formulas.ReportToFile(new java.io.BufferedOutputStream(new JTextAreaOutputStream(OutputTextArea),4096*4)));
    }
	

    private void FormulaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormulaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FormulaTextFieldActionPerformed



    private void CTLButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CTLButtonActionPerformed
        // TODO add your handling code here:
/*
        OutputTextArea.setText("BTL("+FormulaTextField.getText()+")");
        formulas.StarTab tab = new formulas.StarTab(FormulaTextField.getText(), new formulas.ReportToFile(new TextAreaOutputStream(OutputTextArea)));
        tab.go(); */
	cleanUp();
/*        OutputTextArea.setText("");
	if (activeThread != null) {
		activeThread.interrupt();
	}*/
		activeThread = new Thread(new JRunTab(FormulaTextField.getText(), report(), JRunTab.CTL));
	activeThread.start();
    }//GEN-LAST:event_CTLButtonActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Thread activeThread = null;
    private javax.swing.JButton OldBCTLButton;
    private javax.swing.JButton TestBCTLButton;
    private javax.swing.JButton HueBCTLButton;
    private javax.swing.JButton NewBCTLButton;
    private javax.swing.JButton LogBCTLButton;
    private javax.swing.JButton CTLButton;
    private javax.swing.JLabel FormulaLabel;
    private javax.swing.JTextField FormulaTextField;
    private javax.swing.JTextArea OutputTextArea;
    private javax.swing.JScrollPane OutputScrollPane;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JPanel panel3;
    // End of variables declaration//GEN-END:variables

}

/*class RunTab implements Runnable {
    String fs;
    Report r;
    int type;
    static final int BCTLOLD=0;
    static final int BCTLNEW=1;
    static final int CTL=2;
    
    int type_BCTLOLD=0;
    
    public RunTab(String fs, Report r, int type){
        this.fs = fs;
        this.r = r;
        this.type = type;
        
    }
    public void run() {
        //new BctlTab(fs,r);
        PrintWriter out = ((ReportToFile)r).pw;
        formulas.JNode.out=out;        
        long time = java.util.Calendar.getInstance().getTimeInMillis();
        try {
        switch (type) {
            case BCTLNEW: formulas.JBMain.go(fs); break;
            case BCTLOLD: new BctlTab(fs,r); break;
            case CTL:    
                out.println("The CTL* Button in this applet may not work in your"
                        + "browser. If so, try: "
                        + "http://www.csse.uwa.edu.au/~mark/research/Online/startab/Stapplet.html");
                new StarTab(fs,r).go(); break;
            default: throw (new RuntimeException("Unknown Tableau Type"));

        }
//                Thread.sleep(400);
        } catch (Exception e) {
            e.printStackTrace(out);
        }
        out.flush();

        long time2 = java.util.Calendar.getInstance().getTimeInMillis();
        out.format("milliseconds: %d\n", time2 - time);
        
        out.flush();
    }
}
/*

class RunOldBctlTab implements Runnable {
    String fs;
    Report r;
    public RunOldBctlTab(String fs, Report r){
        this.fs = fs;
        this.r = r;
    }
    public void run() {
        new BctlTab(fs,r);
    }
}

class RunStarTab implements Runnable {
    String fs;
    Report r;
    public RunStarTab(String fs, Report r){
        this.fs = fs;
        this.r = r;
    }
    public void run() {
        new StarTab(fs,r).go();
    }
}
*/
